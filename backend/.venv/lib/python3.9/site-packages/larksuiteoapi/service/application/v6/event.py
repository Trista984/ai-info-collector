# -*- coding: UTF-8 -*-
# Code generated by lark suite oapi sdk gen

from typing import Callable

from ....config import Config
from ....context import Context
from ....event.event import set_event_callback

from .model import *


class ApplicationVisibilityAddedEventHandler(object):
    def __init__(self, callback):
        # type: (Callable[[Context, Config, ApplicationVisibilityAddedEvent], Any]) -> None
        self.handler = callback

    def handle(self, ctx, conf, event):  # type: (Context, Config, ApplicationVisibilityAddedEvent) -> Any
        return self.handler(ctx, conf, event)

    @staticmethod
    def set_callback(conf, callback):
        # type: (Config, Callable[[Context, Config, ApplicationVisibilityAddedEvent], Any]) -> None
        handler = ApplicationVisibilityAddedEventHandler(callback)
        set_event_callback(conf, "application.application.visibility.added_v6",
                          handler.handle, clazz=ApplicationVisibilityAddedEvent)
